/**
 * IronWorker CE API
 * The ultimate, language agnostic, container based task processing framework.
 *
 * OpenAPI spec version: 0.5.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WorkerJs);
  }
}(this, function(expect, WorkerJs) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new WorkerJs.TasksApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TasksApi', function() {
    describe('groupsNameTasksGet', function() {
      it('should call groupsNameTasksGet successfully', function(done) {
        //uncomment below and update the code to test groupsNameTasksGet
        //instance.groupsNameTasksGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupsNameTasksIdCancelPost', function() {
      it('should call groupsNameTasksIdCancelPost successfully', function(done) {
        //uncomment below and update the code to test groupsNameTasksIdCancelPost
        //instance.groupsNameTasksIdCancelPost(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupsNameTasksIdDelete', function() {
      it('should call groupsNameTasksIdDelete successfully', function(done) {
        //uncomment below and update the code to test groupsNameTasksIdDelete
        //instance.groupsNameTasksIdDelete(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupsNameTasksIdErrorPost', function() {
      it('should call groupsNameTasksIdErrorPost successfully', function(done) {
        //uncomment below and update the code to test groupsNameTasksIdErrorPost
        //instance.groupsNameTasksIdErrorPost(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupsNameTasksIdGet', function() {
      it('should call groupsNameTasksIdGet successfully', function(done) {
        //uncomment below and update the code to test groupsNameTasksIdGet
        //instance.groupsNameTasksIdGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupsNameTasksIdLogGet', function() {
      it('should call groupsNameTasksIdLogGet successfully', function(done) {
        //uncomment below and update the code to test groupsNameTasksIdLogGet
        //instance.groupsNameTasksIdLogGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupsNameTasksIdLogPost', function() {
      it('should call groupsNameTasksIdLogPost successfully', function(done) {
        //uncomment below and update the code to test groupsNameTasksIdLogPost
        //instance.groupsNameTasksIdLogPost(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupsNameTasksIdRetryPost', function() {
      it('should call groupsNameTasksIdRetryPost successfully', function(done) {
        //uncomment below and update the code to test groupsNameTasksIdRetryPost
        //instance.groupsNameTasksIdRetryPost(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupsNameTasksIdStartPost', function() {
      it('should call groupsNameTasksIdStartPost successfully', function(done) {
        //uncomment below and update the code to test groupsNameTasksIdStartPost
        //instance.groupsNameTasksIdStartPost(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupsNameTasksIdSuccessPost', function() {
      it('should call groupsNameTasksIdSuccessPost successfully', function(done) {
        //uncomment below and update the code to test groupsNameTasksIdSuccessPost
        //instance.groupsNameTasksIdSuccessPost(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupsNameTasksIdTouchPost', function() {
      it('should call groupsNameTasksIdTouchPost successfully', function(done) {
        //uncomment below and update the code to test groupsNameTasksIdTouchPost
        //instance.groupsNameTasksIdTouchPost(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupsNameTasksPost', function() {
      it('should call groupsNameTasksPost successfully', function(done) {
        //uncomment below and update the code to test groupsNameTasksPost
        //instance.groupsNameTasksPost(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tasksGet', function() {
      it('should call tasksGet successfully', function(done) {
        //uncomment below and update the code to test tasksGet
        //instance.tasksGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
